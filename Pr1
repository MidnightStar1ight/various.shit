#include <iostream>
//#include <pch.h>
using namespace std;

int main()
{
    setlocale(0, "");

    

    cout << "1. Объем пямяти, занимаемый различными типами данных:" << '\n' << '\n';
    // int, short int, long int, float, double, long double, char и bool.
    cout <<
        "int: " << sizeof(int) << endl <<
        "short int: " << sizeof(short int) << endl <<
        "long int: " << sizeof(long int) << endl <<
        "float: " << sizeof(float) << endl <<
        "double: " << sizeof(double) << endl <<
        "long double: " << sizeof(long double) << endl <<
        "char: " << sizeof(char) << endl <<
        "bool: " << sizeof(bool) << endl;

    system("pause");

    

    int cycle = true;
    while (cycle)
    {
        //int a;
        //cout << "Введите целое число: ";
        //cin >> a;
        int order = sizeof(int) * 8 - 1;
        int mask = 1 << order;
        //cout << a << ' ' << &a << ' ' << order << ' ' << mask << endl;
        union {
            int integerA;
            float floatB;
        };
        char type;

        do
        {
            cout << "Выберите тип данных: для типа int наберите 'i', для float наберите 'f': ";
            cin >> type;
        } while ((type != 'i') and (type != 'f'));
        if (type == 'i')
        {
            cout << "Введите целое число: ";
            cin >> integerA;
            for (int i = 0; i <= order; i++) {
                cout << ((integerA & mask) ? 1 : 0);
                integerA = integerA << 1;
                if (!i or (i + 1) % 8 == 0)
                    cout << ' ';
            }
        }
        else
        {
            cout << "Введите вещественное число: ";
            cin >> floatB;
            for (int i = 0; i <= order; i++) {
                cout << ((integerA & mask) ? 1 : 0);
                integerA = integerA << 1;
                if (!i or (i == 9))
                    cout << ' ';
            }
        }
        cout << "\n\n" "Повторить?" "\n" "1 - да" "\n" "0 - нет" "\n";
        cin >> cycle;
    }

    

    const int order = sizeof(int)*8;
    int mask = 1 << (order - 1);
    int DNum[order];

    union {
        int a[2];
        double b = 1;
    };

    //cout << a[0] << '\n' << a[1] << '\n';

    
    for (int i = 0; i < order / 2; i++)
    {
        cout << ((a[0] & mask) ? 1 : 0);
        a[0] = a[0] << 1;
        if (!i or (i == 11))
            cout << ' ';
    }

    for (int i = 0; i < order; i++)
    {
        cout << ((a[1] & mask) ? 1 : 0);
        a[1] = a[1] << 1;
    }

    
    

    return 0;
}
